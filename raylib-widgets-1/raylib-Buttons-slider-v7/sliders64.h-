#ifndef __SLIDERS_H
#define __SLIDERS_H

#ifdef __cplusplus
 extern "C" {
#endif

#include "osc.h"

// Структура Slider з полем is_active
typedef struct {
  Rectangle rect;               // Прямокутник, що визначає область повзунка
  float value;                  // Поточне значення повзунка (від 0.0 до 1.0)
  int64_t *scroll;              // Вказівник на змінну, що змінюється при русі повзунка
  bool is_vertical;             // Ознака вертикального (true) або горизонтального (false) повзунка
  bool is_active;               // Чи активний слайдер для взаємодії
} Slider;


// Значення за замовчуванням для змінних
extern uint16_t buffering;         // Статус буферизації (1 - буферизація включена, 0 - вимкнена)
extern uint32_t ray_speed;        // Швидкість малювання сигналу
extern bool oscil_stop; // Статус осцилографа (0 - працює, 1 - зупинений)
extern bool channel_a;  // Активність каналу A (1 - активний, 0 - неактивний)
extern bool channel_b;  // Активність каналу B (1 - активний, 0 - неактивний)
extern uint32_t adc_tmp_a;
extern uint32_t adc_tmp_b;  // Тимчасові змінні для зберігання значень з АЦП каналів A і B

extern int64_t scroll_x_a;
extern int64_t scroll_x_b; // Зміщення буферів по осі X для каналів A і B
extern int64_t scroll_y_a;
extern int64_t scroll_y_b; // Зміщення буферів по осі Y для каналів A і B
extern int64_t trigger_a;  // Змінна тригера

extern uint16_t fps_count;         // Лічильник кадрів для відстеження швидкості оновлення

// extern uint16_t * buffer_save_a;
// extern uint16_t * buffer_save_b;    // Буфери для збереження сигналів каналів A і B

extern bool toggle;            // Стан кнопки тригера (увімкнено/вимкнено)

// Вертикальні повзунки для налаштування каналів
extern Rectangle vSlider_a; // Повзунок для каналу A

extern float vSliderValue_a;    // Початкове значення повзунка для каналу A (центр)

extern Rectangle vSlider_b; // Повзунок для каналу B

extern float vSliderValue_b;    // Початкове значення повзунка для каналу B (центр)

// Горизонтальні повзунки для налаштування каналів
extern Rectangle hSlider_a;   // Горизонтальний повзунок для каналу A

extern float hSliderValue_a;    // Початкове значення горизонтального повзунка для каналу A (центр)

extern Rectangle hSlider_b;  // Горизонтальний повзунок для каналу B

extern float hSliderValue_b;    // Початкове значення горизонтального повзунка для каналу B (центр)

// Повзунок для налаштування тригера
extern Rectangle vSlider_trig_a;

extern float vSlider_trigValue_a;       // Початкове значення повзунка тригера (центр)

extern Rectangle triggerBtn;           // Кнопка для тригера


// ================================================


// Функція для отримання позиції миші та перевірки натискання кнопки
bool get_mouse_input(Vector2 *mouse_pos);

// Функція для перевірки, чи миша знаходиться в межах слайдера
bool is_mouse_over_slider(Slider *slider, Vector2 mouse_pos);

// Функція для деактивації всіх слайдерів
void deactivate_all_sliders(void);

// Функція для малювання слайдера з урахуванням кольору ручки
void draw_slider(Slider s, Color color);

// Оновлена функція малювання всіх слайдерів з урахуванням кольору ручки
void draw_sliders(void);

// Оновлена функція для обробки натискання миші і перевірки активного слайдера
void update_sliders(void);

// Функція для оновлення значення повзунка на основі положення миші
void update_slider_value(Slider *s, Vector2 mouse);

// Оновлена функція для обробки вертикального слайдера тригера
void update_trigger_slider(void);

// Функція обробки натискання кнопки тригера
void update_trigger_button(void);

// Функція малювання кнопки тригера
void draw_trigger_button(void);


#ifdef __cplusplus
}
#endif

#endif /* __SLIDERS_H */
